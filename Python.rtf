{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fmodern JetBrains Mono;}{\f2\fmodern\fcharset0 JetBrains Mono;}}
{\colortbl ;\red136\green136\blue198;\red169\green183\blue198;\red106\green135\blue89;\red104\green151\blue187;\red204\green120\blue50;\red128\green128\blue128;\red204\green204\blue204;\red170\green73\blue38;\red255\green198\blue109;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 In built function\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf1\f1\fs20 print\cf2 (\cf3 "Hello World"\cf2 )\line\cf1 print\cf2 (\cf4 4 \cf2 * (\cf4 6 \cf2 + \cf4 5\cf2 ));\line\cf1 print\cf2 (\cf1 round\cf2 (\cf4 4.4\cf2 ))\f0\lang1033  # 4\f1\lang9\line\cf1 print\cf2 (\cf1 type\cf2 (\cf3 'fsdf'\cf2 ))\f0\lang1033  # string\f1\lang9\line\cf1 print\cf2 (\cf1 type\cf2 (\cf4 4.4\cf2 ))\f0\lang1033  #float\f1\lang9\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22 Math function\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf5\f1\fs20 import \cf2 math;\line\cf1 print\cf2 (math.sqrt(\cf4 9\cf2 ));\cf6 # 3\line\cf1 print\cf2 (math.pow(\cf4 5\cf5 ,\cf4 2\cf2 )); \cf6 # 25\line\cf1 print\cf2 (math.pow(\cf4 5\cf5 ,\cf4 3\cf2 )); \cf6 # 125\line\cf1 print\cf2 (math.floor(\cf4 5.6\cf2 )); \cf6 # 5\par
\cf5\f2\lang1033 import \cf2 math\line\cf1 print\cf2 (\cf1 min\cf2 (\cf4 3\cf5 ,\cf4 5\cf5 ,\cf4 3\cf5 ,\cf4 4\cf5 ,\cf4 6\cf5 ,\cf4 1\cf2 )); \cf6 #1\line\cf1 print\cf2 (\cf1 max\cf2 (\cf4 3\cf5 ,\cf4 5\cf5 ,\cf4 3\cf5 ,\cf4 4\cf5 ,\cf4 6\cf5 ,\cf4 1\cf2 )); \cf6 #6\line\cf1 print\cf2 (\cf1 len\cf2 (\cf3 "Mohnish"\cf2 )); \cf6 #7\par
\cf2\par
\cf0\f0\fs22 Declaring variable\par
\cf2\f1\fs20 a = \cf1 int\cf2 (\cf4 4.4\cf2 )\line\cf1 print \cf2 (\cf1 type\cf2 (a))\f0 ; # int\f1\par
\cf0\f0\fs22 Storring or Assigning values\par
\cf2\f1\fs20\lang9 b = \cf4 4 \cf2 + \cf4 5\line\cf2 c = b\line\cf1 print\cf2 (c);\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22\lang1033 If else\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf2\f1\fs20 a=\cf4 1\line\cf5 if \cf2 a==\cf4 5\cf2 :\line     \cf1 print\cf2 (\cf3 'True'\cf2 );\line\cf5 else\cf2 :\line     \cf1 print\cf2 (\cf3 'false'\cf2 )\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22\lang9 Nested if else\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf2\f1\fs20 a=\cf4 1\line\cf5 if \cf2 a==\cf4 5\cf2 :\line     \cf1 print\cf2 (\cf3 'True'\cf2 );\line\cf5 elif \cf2 a==\cf4 2\cf2 :\line     \cf1 print\cf2 (\cf3 'True'\cf2 )\line\cf5 elif \cf2 a==\cf4 3\cf2 :\line     \cf1 print\cf2 (\cf3 'True'\cf2 )\line\cf5 else\cf2 :\line     \cf1 print\cf2 (\cf3 'false'\cf2 )\par
\par
a=\cf3 'Orange'\line\cf5 if \cf2 a \cf5 in \cf2 [\cf3 'Orange'\cf5 ,\cf3 'Banana'\cf5 ,\cf3 'Apple'\cf2 ]:\line     \cf1 print\cf2 (\cf3 'True'\cf2 );\line\cf5 elif \cf2 a \cf5 in \cf2 [\cf3 'Elephant'\cf5 ,\cf3 'Lion'\cf5 ,\cf3 'Tiger'\cf2 ]:\line     \cf1 print\cf2 (\cf3 'True'\cf2 )\line\cf5 elif \cf2 a \cf5 in\cf2 [\cf3 'Snake'\cf5 ,\cf3 'Bird'\cf5 ,\cf3 'Fish'\cf2 ]:\line     \cf1 print\cf2 (\cf3 'True'\cf2 )\line\cf5 else\cf2 :\line     \cf1 print\cf2 (\cf3 'false'\cf2 )\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22 Formatting with placeholders\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf2\f1\fs20 x= \cf4 10\line\cf1 print\cf2 (\cf3 "The value of x is"\cf5 ,\cf2 x\cf5 ,\cf3 'true'\cf2 )\line x\cf5 ,\cf2 y=\cf4 10\cf5 ,\cf4 20\line\cf1 print\cf2 (\cf3 "I am going to inject %s text here, and %s text here."\cf2 %(x\cf5 ,\cf2 y))\line\cf1 print\cf2 (\cf3 "I am going to injects %s %s here %s." \cf2 %(\cf3 'something'\cf5 ,\cf3 'more'\cf5 ,\cf3 'ok'\cf2 ))\line\line\cf1 print\cf2 (\cf3 'He said his name was %s'\cf2 %\cf3 'Mohnish'\cf2 )\line\cf1 print\cf2 (\cf3 'He said his name was %r'\cf2 %\cf3 '\cf5\\t\cf3 Mohnish'\cf2 )\line\cf1 print\cf2 (\cf3 'He said his name was %s'\cf2 %\cf3 '\cf5\\t\cf3 Mohnish'\cf2 )\line\cf1 print\cf2 (\cf3 'He said his number was %d'\cf2 %\cf4 7.9\cf2 )\line\cf1 print\cf2 (\cf3 'He said his nubber was %s'\cf2 %\cf4 7.9\cf2 )\par
The value of x is 10 true\par
I am going to inject 10 text here, and 20 text here.\par
I am going to injects something more here ok.\par
He said his name was Mohnish\par
He said his name was '\\tMohnish'\par
He said his name was \tab Mohnish\par
He said his number was 7\par
He said his nubber was 7.9\par

\pard\sa200\sl276\slmult1\cf0\f0\fs22 Padding and Precision of Floating Point Numbers\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf1\f1\fs20 print\cf2 (\cf3 'Flosting number %1.2f'\cf2 %(\cf4 12.342\cf7 ))\cf2\line\cf1 print\cf2 (\cf3 'Flosting number %10.2f'\cf2 %(\cf4 12.342\cf2 ))\line\cf1 print\cf2 (\cf3 'Flosting number %1.2f'\cf2 %(\cf4 12.342\cf2 ))\par

\pard\sa200\sl276\slmult1\cf7\f0\fs22 Flosting number 12.34\par
Flosting number      12.34\par
Flosting number 12.34\par
\cf0 Multiple Formating\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf1\f1\fs20 print\cf2 (\cf3 'First: %s, Second: %5.2f, Third: %r' \cf2 %(\cf3 'h1!'\cf5 ,\cf4 34.3\cf5 ,\cf3 'bye!'\cf2 ))\line\par

\pard\sa200\sl276\slmult1\cf7\f0\fs22 First: h1!, Second: 34.30, Third: 'bye!'\par
\cf0 Formatting with the .format()method\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf1\f1\fs20 print\cf2 (\cf3 'The \{2\}\{1\}\{0\}'\cf2 .format(\cf3 'fox'\cf5 ,\cf3 'brown'\cf5 ,\cf3 'quick'\cf2 ))\line\cf1 print\cf2 (\cf3 'First Object: \{b\},Second Object: \{a\}, Third Object: \{c\}'\cf2 .format(\cf8 a\cf2 =\cf4 1\cf5 ,\cf8 b\cf2 =\cf3 'two'\cf5 ,\cf8 c\cf2 =\cf4 12.3\cf2 ))\line\cf1 print\cf2 (\cf3 'A %s saved is a %s earned'\cf2 %(\cf3 'penny'\cf5 ,\cf3 'penny'\cf2 ))\line\cf1 print\cf2 (\cf3 'A \{p\} saved is a \{p\} earned'\cf2 .format(\cf8 p\cf2 =\cf3 'penny'\cf2 ))\par

\pard\sa200\sl276\slmult1\cf7\f0\fs22 The quick brown fox\par
First Object: two,Second Object: 1, Third Object: 12.3\par
A penny saved is a penny earned\par
A penny saved is a penny earned\par
\cf0 Allignment,padding and precision with.format()\cf7\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf2\f1\fs20\line\cf1 print\cf2 (\cf3 '\{0:5\} | \{1:5\}'\cf2 .format(\cf3 'fruit'\cf5 ,\cf3 '12'\cf2 ))\line\cf1 print\cf2 (\cf3 '\{0:10\} | \{1:10\}'\cf2 .format(\cf3 'fruit'\cf5 ,\cf3 '12'\cf2 ))\line\cf1 print\cf2 (\cf3 '\{0:<10\} | \{1:^10\} | \{2:>10\}'\cf2 .format(\cf3 'left'\cf5 ,\cf3 'Center'\cf5 ,\cf3 'Right'\cf2 ))\line\cf1 print\cf2 (\cf3 '\{0:=<10\} | \{1:-^10\} | \{2:.>10\}'\cf2 .format(\cf3 'left'\cf5 ,\cf3 'Center'\cf5 ,\cf3 'Right'\cf2 ))\line\cf1 print\cf2 (\cf3 'This is my ten-character, two-decimal number:%10.2f' \cf2 %\cf4 13.529\cf2 )\line\cf1 print\cf2 (\cf3 'This is my ten-character, two-decimal number:\{0:10.2f\}'\cf2 .format(\cf4 13.579\cf2 ))\par
fruit | 12   \par
fruit      | 12        \par
left       |   Center   |      Right\par
left====== | --Center-- | .....Right\par
This is my ten-character, two-decimal number:     13.53\par
This is my ten-character, two-decimal number:     13.58\par
\cf0\f0\fs22\lang1033 Formatted String Literals(f-strings)\par
\cf2\f1\fs20 name = \cf3 'Asha'\line\cf2 x=\cf4 10\line\cf1 print\cf2 (\cf3 f"my name is \cf5\{\cf2 name\cf5\} \{\cf2 name\cf5\} \{\cf2 x\cf5\}\cf3 "\cf2 )\line\cf1 print\cf2 (\cf3 f"my name is \cf5\{\cf2 name\cf5 !r\}\cf3 "\cf2 ) \cf6 #string representation\line\cf2 num =\cf4 23.45678\line\cf1 print\cf2 (\cf3 "my 10 character, four decimal number is:\{0:19.4f\}"\cf2 .format(num))\line\cf1 print\cf2 (\cf3 f"my 10 character, four decimal number is:\cf5\{\cf2 num\cf5 :\{\cf4 10\cf5\}\cf3 .\cf5\{\cf4 8\cf5\}\}\cf3 "\cf2 )\line\par
my name is Asha Asha 10\par
my name is 'Asha'\par
my 10 character, four decimal number is:            23.4568\par
my 10 character, four decimal number is:  23.45678\par
\cf0\f0\fs22 Strings\par
\cf2\f1\fs20 str = \cf3 'Mohnish'\line\cf1 print\cf2 (str[\cf4 0\cf2 ]\cf5 ,\cf2 str[-\cf4 1\cf2 ])\line\cf1 print\cf2 (str[\cf4 0\cf2 :\cf4 7\cf2 :\cf4 1\cf2 ])\line\cf1 print\cf2 (str[\cf4 1\cf2 :\cf4 5\cf2 :\cf4 1\cf2 ])\line\cf1 print\cf2 (str[\cf4 0\cf2 :\cf4 7\cf2 :\cf4 2\cf2 ])\line\cf1 print\cf2 (str[-\cf4 1\cf2 :-\cf4 7\cf2 :-\cf4 1\cf2 ])\par
\f2\lang9 M h\par
Mohnish\par
ohni\par
Mhih\par
hsinho\par
str =[\cf4 1\cf5 ,\cf4 1\cf5 ,\cf4 1\cf5 ,\cf4 1\cf2 ]\line\cf1 print\cf2 (str*\cf4 2\cf2 )\line word =\cf3 'banana'\line\cf2 New_word = word.upper()\line New_word1 = word.lower()\line\cf1 print\cf2 (word)\line\cf1 print\cf2 (New_word)\line\cf1 print\cf2 (New_word1)\line word = \cf3 'Mohnish'\line\cf1 print\cf2 (word.find(\cf3 'oh'\cf2 ))\line\cf1 print\cf2 (word.find(\cf3 'oh'\cf5 ,\cf2 -\cf4 1\cf2 ))\line\cf1 print\cf2 (word.find(\cf3 'oh'\cf5 ,\cf4 2\cf2 ))\line word=\cf3 'aman kumar'\line\cf1 print\cf2 (word.split())\par
[1, 1, 1, 1, 1, 1, 1, 1]\par
banana\par
BANANA\par
banana\par
1\par
-1\par
-1\par
['aman', 'kumar']\par
\cf0\f0\fs22\lang1033 While loop\par
\cf2\f1\fs20 fruit =\cf3 'banana'\line\cf2 index =\cf4 0\line\cf5 while \cf2 index < \cf1 len\cf2 (fruit):\line     letter = fruit[index]\line     \cf1 print\cf2 (letter)\line     index =index +\cf4 1\line\par
\cf2\f2\lang9 b\par
a\par
n\par
a\par
n\par
\f0\lang1033 a\f1\lang9\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\tx2790\cf0\f0\fs22\lang1033 For loop\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf2\f1\fs20 word = \cf3 'banana'\line\cf2 count=\cf4 0\line\cf5 for \cf2 letter \cf5 in \cf2 word:\line     \cf5 if \cf2 letter == \cf3 'a'\cf2 :\line         count =count +\cf4 1\line\cf1 print\cf2 (count)\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\tx2790\f0 3\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\f1 fruit =\cf3 'banana'\line\cf1 print\cf2 (fruit[::-\cf4 1\cf2 ])\line\cf5 for \cf2 char \cf5 in \cf2 fruit[::-\cf4 1\cf2 ]:\line     \cf1 print\cf2 (char)\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\tx2790\f2\lang9 ananab\par
a\par
n\par
a\par
n\par
a\par
b\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1 x=\cf4 0\cf2 ;\line\cf5 while \cf2 x<=\cf4 90\cf2 :\line     \cf1 print\cf2 (\cf3 '*'\cf5 ,\cf8 end\cf2 =\cf3 ''\cf2 )\line     x += \cf4 1\line     \cf5 if \cf2 x==\cf4 20\cf2 :\cf1 print\cf2 (\cf3 ''\cf2 )\line     \cf5 if \cf2 x==\cf4 50\cf2 :\cf1 print\cf2 (\cf3 ''\cf2 );\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\tx2790 ********************\par
******************************\par
*****************************************\par
\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\f1 lst =[\cf4 1\cf5 ,\cf4 2\cf5 ,\cf4 3\cf2 ]\line lst.append(\cf4 23\cf2 )\line\cf1 print\cf2 (lst)\line\cf1 print\cf2 (lst[\cf4 0\cf2 ])\cf6 #muitable\line\cf2 lst[\cf4 0\cf2 ]=\cf4 2\line\cf1 print\cf2 (lst[\cf4 0\cf2 ])\line\cf1 print\cf2 (lst)\line\line\cf6 #type casting strings\line\cf2 st =\cf3 'ygjyhbh'\line\cf2 lst =\cf1 list\cf2 (st)\line\cf1 print\cf2 (lst)\line\line\cf6 #type casting tuples\line\cf2 st = (\cf4 3\cf5 ,\cf4 4\cf5 ,\cf4 4\cf5 ,\cf4 5\cf2 )\line lst =\cf1 list\cf2 (st)\line\cf1 print\cf2 (lst)\line\line\cf6 #type casting range\line\cf2 st = (\cf1 range\cf2 (\cf4 0\cf5 ,\cf4 10\cf2 ))\line lst =\cf1 list\cf2 (st)\line\cf1 print\cf2 (lst)\line\cf1 print\cf2 (lst[-\cf4 1\cf2 ])\line\line\cf7 [1, 2, 3, 23]\line 1\line 2\line [2, 2, 3, 23]\line ['y', 'g', 'j', 'y', 'h', 'b', 'h']\line [3, 4, 4, 5]\line [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\line 9\par
\f0\lang1033 #deleting in list\f1\lang9\line\cf5 def \cf9 delete_head\cf2 (t):\line     \cf1 print\cf2 (\cf1 id\cf2 (t))\line     \cf5 del \cf2 t[\cf4 0\cf2 ]\line letters = [\cf3 'a'\cf5 , \cf3 'b'\cf5 , \cf3 'c'\cf2 ]\line delete_head(letters)\line\cf1 print\cf2 (letters)\par
\cf7 2225708919744\par
['b', 'c']\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf4\par
\cf6 #Basic list Methods\line\cf2 lst =[\cf4 1\cf5 ,\cf4 2\cf5 ,\cf4 3\cf5 ,\cf4 4\cf5 ,\cf2 ]\line\cf1 print\cf2 (lst)\line lst.append([\cf4 3\cf5 ,\cf4 4\cf5 ,\cf4 5\cf2 ])\cf6 #can be of one parameter or tuple\line\cf1 print\cf2 (lst)\line lst.extend([\cf4 3\cf5 ,\cf4 4\cf5 ,\cf4 5\cf2 ])\cf6 # take multiple parameter\line\cf1 print\cf2 (lst)\line x=lst.pop(\cf4 3\cf2 )\cf6 # index 3 will be removed from the list\line\cf1 print\cf2 (x)\line\cf1 print \cf2 (lst)\line x=lst.pop()\cf6 # index last will be removed from the list\line\cf1 print\cf2 (x)\line\cf1 print \cf2 (lst)\line lst=[\cf3 'a'\cf5 ,\cf3 'e'\cf5 ,\cf3 'x'\cf5 ,\cf3 'b'\cf5 ,\cf3 'c'\cf2 ]\line a=lst.sort()\cf6 #ascending\line\cf1 print\cf2 (lst)\line a=lst.sort(\cf8 reverse\cf2 =\cf5 True\cf2 )\cf6 #desending\line\cf1 print\cf2 (lst)\line\cf6 #aliasis\line\cf2 lst=[\cf4 1\cf5 ,\cf4 2\cf5 ,\cf4 3\cf5 ,\cf4 4\cf5 ,\cf4 5\cf2 ]\line lst1=lst\line lst[\cf4 1\cf2 ]=\cf4 13\cf6 #both list will be changed as having common address\line\cf1 print\cf2 (lst)\line\cf1 print\cf2 (lst1)\line\cf6 #colning\line\cf2 lst=[\cf4 1\cf5 ,\cf4 2\cf5 ,\cf4 3\cf5 ,\cf4 4\cf5 ,\cf4 5\cf2 ]\line lst1=lst[:]\line lst[\cf4 1\cf2 ]=\cf4 13\cf6 #both list will not be changed as having diffrent address\line\cf1 print\cf2 (lst)\line\cf1 print\cf2 (lst1)\line\cf1 print\cf2 (\cf1 max\cf2 (lst))\line\cf1 print\cf2 (\cf1 min\cf2 (lst))\line\line\cf7 [1, 2, 3, 4]\line [1, 2, 3, 4, [3, 4, 5]]\line [1, 2, 3, 4, [3, 4, 5], 3, 4, 5]\line 4\line [1, 2, 3, [3, 4, 5], 3, 4, 5]\line 5\line [1, 2, 3, [3, 4, 5], 3, 4]\line ['a', 'b', 'c', 'e', 'x']\line ['x', 'e', 'c', 'b', 'a']\line [1, 13, 3, 4, 5]\line [1, 13, 3, 4, 5]\line [1, 13, 3, 4, 5]\line [1, 2, 3, 4, 5]\line 13\line 1\par
\par
\cf6 #Strings and List\line\line\cf2 s=\cf3 'sgvdfa jbbk'\line\cf2 lst =\cf1 list\cf2 (s)\line\cf1 print\cf2 (lst)\line lst=s.split()\cf6 #split\line\cf1 print\cf2 (lst)\line s=\cf3 'afdd-dfsd-dsa'\line\cf2 delimiter =\cf3 '-'\line\cf2 b=s.split(delimiter)\cf6 #delimiter\line\cf1 print\cf2 (b)\line s=\cf3 'afdd'\cf5 ,\cf3 'dfsd'\cf5 ,\cf3 'dsa'\line\cf2 delimiter =\cf3 ''\line\cf2 b=delimiter.join(s)\cf6 #delimiter\line\cf1 print\cf2 (b)\line\line\cf7 ['s', 'g', 'v', 'd', 'f', 'a', ' ', 'j', 'b', 'b', 'k']\line ['sgvdfa', 'jbbk']\line ['afdd', 'dfsd', 'dsa']\line afdddfsddsa\line\cf2\par
a=\cf3 'banana'\cf6 #strings are imuitable i.e true,addresses are same\line\cf1 print\cf2 (\cf1 id\cf2 (a))\cf6 #address\line\cf2 b=\cf3 'banana'\line\cf1 print\cf2 (\cf1 id\cf2 (b))\cf6 #address\line\cf1 print\cf2 (a \cf5 is \cf2 b)\cf6 #comparing using is operator\line\line\cf2 a=[\cf4 1\cf5 ,\cf4 2\cf5 ,\cf4 3\cf2 ]\cf6 #list are muitable i.e false,addresses are diffrent\line\cf1 print\cf2 (\cf1 id\cf2 (a))\cf6 #address\line\cf2 b=[\cf4 1\cf5 ,\cf4 2\cf5 ,\cf4 3\cf2 ]\line\cf1 print\cf2 (\cf1 id\cf2 (b))\cf6 #address\line\cf1 print\cf2 (a \cf5 is \cf2 b)\cf6 #comparing using is operator\line\line\cf7 2042476099184\line 2042476099184\line True\line 2042476096448\line 2042476113664\line False\par
\cf2 a=[[\cf4 1\cf5 ,\cf4 2\cf5 ,\cf4 3\cf2 ]\cf5 ,\cf2 [\cf4 4\cf5 ,\cf4 5\cf5 ,\cf4 6\cf2 ]\cf5 ,\cf2 [\cf4 7\cf5 ,\cf4 8\cf5 ,\cf4 9\cf2 ]]\line\cf1 print\cf2 (a)\line\cf5 for \cf2 b \cf5 in \cf1 range\cf2 (\cf1 len\cf2 (a)):\line     \cf5 for \cf2 c \cf5 in \cf1 range\cf2 (\cf1 len\cf2 (a[b])):\line         \cf1 print\cf2 (a[b][c])\line\cf1 print\cf2 (\cf3 '_'\cf2 *\cf4 30\cf2 )\line\cf1 print\cf2 (\cf3 'Name'\cf5 ,\cf2 a[\cf4 1\cf2 ][\cf4 0\cf2 ])\line\line\cf7 [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\line 1\line 2\line 3\line 4\line 5\line 6\line 7\line 8\line 9\line ______________________________\line Name 4\line\cf4\par
\cf6 #Tuples  immutible\line\cf2 t =(\cf4 3\cf5 ,\cf4 3\cf5 ,\cf4 3\cf5 ,\cf4 4\cf5 ,\cf2\{\cf4 3\cf2\}\cf5 ,\cf2 [\cf4 3\cf2 ])\line\cf1 print\cf2 (t)\line\cf6 #type casting in tuple\line\cf2 lst=[\cf4 1\cf5 ,\cf4 13\cf5 ,\cf4 3\cf2 ]\line t = \cf1 tuple\cf2 (lst)\line\cf1 print\cf2 (t)\line\cf6 #range in tupal\line\cf2 t=\cf1 range\cf2 (\cf4 1\cf5 ,\cf4 10\cf2 )\line\cf1 print\cf2 (\cf1 tuple\cf2 (t))\line\cf6 #types in tupal\line\cf2 t=(\cf4 1\cf5 ,\cf4 2\cf5 ,\cf4 3\cf2 )\line\cf1 print\cf2 (\cf1 type\cf2 (t))\line t=\cf4 1\cf5 ,\cf4 2\cf5 ,\cf4 3\cf5 ,\cf4 4 \cf6 # tuple can also represent like this\line\cf1 print\cf2 (\cf1 type\cf2 (t))\line\cf1 print\cf2 (t[\cf4 1\cf2 ])\line t=(\cf4 1\cf2 )\line\cf1 print\cf2 (\cf1 type\cf2 (t))\line\cf6 #slising\line\cf2 t=(\cf4 1\cf5 ,\cf4 2\cf5 ,\cf4 3\cf5 ,\cf4 4\cf2 )\line\cf1 print\cf2 (t[\cf4 0\cf2 ])\line\cf6 #indexing\line\cf2 t=(\cf4 1\cf5 ,\cf4 2\cf5 ,\cf4 3\cf5 ,\cf4 4\cf2 )\line\cf1 print\cf2 (t[\cf4 0\cf2 :\cf4 4\cf2 :\cf4 2\cf2 ])\line\cf1 print\cf2 (t.count(\cf4 3\cf2 ))\line\line\cf7 (3, 3, 3, 4, \{3\}, [3])\line (1, 13, 3)\line (1, 2, 3, 4, 5, 6, 7, 8, 9)\line <class 'tuple'>\line <class 'tuple'>\line 2\line <class 'int'>\line 1\line (1, 3)\line 1\line\cf4\par
\cf7\par
\cf6 #Tuples  immutible\line\cf2 t =(\cf4 3\cf5 ,\cf4 3\cf5 ,\cf4 3\cf5 ,\cf4 4\cf5 ,\cf2\{\cf4 3\cf2\}\cf5 ,\cf2 [\cf4 3\cf2 ])\line\cf1 print\cf2 (t)\line\cf6 #type casting in tuple\line\cf2 lst=[\cf4 1\cf5 ,\cf4 13\cf5 ,\cf4 3\cf2 ]\line t = \cf1 tuple\cf2 (lst)\line\cf1 print\cf2 (t)\line\cf6 #range in tupal\line\cf2 t=\cf1 range\cf2 (\cf4 1\cf5 ,\cf4 10\cf2 )\line\cf1 print\cf2 (\cf1 tuple\cf2 (t))\line\cf6 #types in tupal\line\cf2 t=(\cf4 1\cf5 ,\cf4 2\cf5 ,\cf4 3\cf2 )\line\cf1 print\cf2 (\cf1 type\cf2 (t))\line t=\cf4 1\cf5 ,\cf4 2\cf5 ,\cf4 3\cf5 ,\cf4 4 \cf6 # tuple can also represent like this\line\cf1 print\cf2 (\cf1 type\cf2 (t))\line\cf1 print\cf2 (t[\cf4 1\cf2 ])\line t=(\cf4 1\cf2 )\line\cf1 print\cf2 (\cf1 type\cf2 (t))\line\cf6 #slising\line\cf2 t=(\cf4 1\cf5 ,\cf4 2\cf5 ,\cf4 3\cf5 ,\cf4 4\cf2 )\line\cf1 print\cf2 (t[\cf4 0\cf2 ])\line\cf6 #indexing\line\cf2 t=(\cf4 1\cf5 ,\cf4 2\cf5 ,\cf4 3\cf5 ,\cf4 4\cf2 )\line\cf1 print\cf2 (t[\cf4 0\cf2 :\cf4 4\cf2 :\cf4 2\cf2 ])\line\cf1 print\cf2 (t.count(\cf4 3\cf2 ))\line\cf1 print\cf2 (t.count(\cf4 3\cf2 ))\line\cf1 print\cf2 (t.count(\cf4 3\cf2 ))\line\cf1 print\cf2 (\cf1 min\cf2 (t))\line\cf1 print\cf2 (\cf1 max\cf2 (t))\line a=(\cf4 1\cf5 ,\cf4 2\cf5 ,\cf4 3\cf5 ,\cf4 4\cf2 )\line b=(\cf4 1\cf5 ,\cf4 2\cf5 ,\cf4 3\cf5 ,\cf4 4\cf2 )\line\cf1 print\cf2 (\cf1 id\cf2 (a))\line\cf1 print\cf2 (\cf1 id\cf2 (b))\line\cf1 print\cf2 (a \cf5 is \cf2 b)\line\line\cf7 (3, 3, 3, 4, \{3\}, [3])\line (1, 13, 3)\line (1, 2, 3, 4, 5, 6, 7, 8, 9)\line <class 'tuple'>\line <class 'tuple'>\line 2\line <class 'int'>\line 1\line (1, 3)\line 1\line 1\line 1\line 1\line 4\line 2094419672368\line 2094419672368\line True\par

\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\tx2790\cf2\f2\par
}
 